{"ast":null,"code":"import _classCallCheck from \"/home/jddelia/reactjs/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jddelia/reactjs/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jddelia/reactjs/calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jddelia/reactjs/calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jddelia/reactjs/calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jddelia/reactjs/calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Digit(props) {\n  return React.createElement(\"button\", {\n    className: \"digit\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.value));\n}\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calculator, _React$Component);\n\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n    _this.digits = [7, 8, 9, '/', 4, 5, 6, 'X', 1, 2, 3, '-', 0, '.', '=', '+'];\n    _this.state = {\n      display: \"0\",\n      values: ''\n    };\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"addOperator\",\n    value: function addOperator(i) {\n      this.setState({\n        display: null,\n        values: this.state.values + \"\".concat(i)\n      });\n    }\n  }, {\n    key: \"calcSum\",\n    value: function calcSum() {\n      try {\n        var total = eval(this.state.values);\n        this.setState({\n          display: total,\n          values: ''\n        });\n      } catch (error) {\n        this.setState({\n          display: '0',\n          values: ''\n        });\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      if (i in ['/', 'X', '-', '+']) {\n        return this.state.addOperator(i);\n      } else if (i === '=') {\n        return this.state.calcSum();\n      } else {\n        this.setState({\n          display: i,\n          values: this.state.values + \"\".concat(i)\n        });\n      }\n    }\n  }, {\n    key: \"createDigit\",\n    value: function createDigit(i) {\n      var _this2 = this;\n\n      return React.createElement(Digit, {\n        value: this.digits[i],\n        onClick: function onClick() {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"createRow\",\n    value: function createRow(start) {\n      var digits = [];\n\n      for (var i = start; i < start + 4; i++) {\n        var newDigit = this.createDigit(i);\n        digits.push(newDigit);\n      }\n\n      return digits;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calc-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.display)), React.createElement(\"div\", {\n        className: \"digit-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.createRow(0)), React.createElement(\"div\", {\n        className: \"digit-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.createRow(4)), React.createElement(\"div\", {\n        className: \"digit-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.createRow(8)), React.createElement(\"div\", {\n        className: \"digit-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.createRow(12)));\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n\nReactDOM.render(React.createElement(Calculator, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/jddelia/reactjs/calculator/src/index.js"],"names":["React","ReactDOM","Digit","props","onClick","value","Calculator","digits","state","display","values","i","setState","total","eval","error","addOperator","calcSum","handleClick","start","newDigit","createDigit","push","createRow","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Digit(props) {\n  return (\n    <button\n      className=\"digit\"\n      onClick={props.onClick} >\n      <h3>{props.value}</h3>\n    </button>\n  );\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.digits = [\n      7, 8, 9, '/',\n      4, 5, 6, 'X',\n      1, 2, 3, '-',\n      0, '.', '=', '+',\n    ];\n    this.state = {\n      display: \"0\",\n      values: '',\n    };\n  }\n\n  addOperator(i) {\n    this.setState({\n      display: null,\n      values: this.state.values + `${i}`\n    });\n  }\n\n  calcSum() {\n    try {\n      let total = eval(this.state.values);\n      this.setState({\n        display: total,\n        values: '',\n      });\n    }\n    catch(error) {\n      this.setState({\n        display: '0',\n        values: ''\n      })\n    }\n  }\n\n  handleClick(i) {\n    if (i in ['/', 'X', '-', '+']) {\n      return this.state.addOperator(i);\n\n    }\n    else if ( i === '=') {\n      return this.state.calcSum();\n\n    }\n    else {\n      this.setState({\n        display: i,\n        values: this.state.values + `${i}`,\n      });\n    }\n  }\n\n  createDigit(i) {\n    return (\n      <Digit\n        value={this.digits[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  createRow(start) {\n    let digits = [];\n    for (let i = start; i < start + 4; i++) {\n      let newDigit = this.createDigit(i);\n      digits.push(newDigit)\n    }\n    return digits\n  }\n\n  render() {\n    return (\n      <div className=\"calc-body\">\n        <div className=\"input-area\">\n          <h3>{this.state.display}</h3>\n        </div>\n        <div className=\"digit-row\">\n          {this.createRow(0)}\n        </div>\n        <div className=\"digit-row\">\n          {this.createRow(4)}\n        </div>\n        <div className=\"digit-row\">\n          {this.createRow(8)}\n        </div>\n        <div className=\"digit-row\">\n          {this.createRow(12)}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}